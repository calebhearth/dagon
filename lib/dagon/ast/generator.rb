#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


module Ast
  class Generator < Racc::Parser

module_eval(<<'...end generator.y/module_eval...', 'generator.y', 53)
  attr_accessor :table
  def initialize(tokens)
    @tokens = tokens
  end

  def parse
    @table = do_parse
    self
  end

  def next_token
    tokens.shift
  end

  private
  attr_accessor :tokens
...end generator.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    34,    36,    35,    25,    26,    48,     9,    10,    42,
     9,    10,    29,    37,    15,    16,    17,    15,    16,    17,
     9,    10,    43,     9,    10,    22,    23,    15,    16,    17,
    15,    16,    17,    30,    44,    45,    15,    16,    17,    50,
    46,    47,    15,    16,    17,    15,    16,    17,    15,    16,
    17,    15,    16,    17,    15,    16,    17,    15,    16,    17,
    15,    16,    17,    26,    26,    24,    40,    21,    19,    18,
    41 ]

racc_action_check = [
    24,    24,    24,    24,    18,    22,    38,    38,    38,    32,
     0,     0,    22,    24,    38,    38,    38,     0,     0,     0,
     3,     3,    33,    26,    26,    11,    11,     3,     3,     3,
    26,    26,    26,    23,    34,    35,    23,    23,    23,    41,
    36,    37,    41,    41,    41,    29,    29,    29,    45,    45,
    45,    44,    44,    44,    46,    46,    46,    43,    43,    43,
    47,    47,    47,    21,    40,    12,    30,    10,     2,     1,
    31 ]

racc_action_pointer = [
     1,    69,    62,    11,   nil,   nil,   nil,   nil,   nil,   nil,
    56,    14,    51,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,    56,    -2,    20,    -2,   nil,    14,   nil,   nil,    29,
    55,    58,    -4,     8,    20,    21,    26,    27,    -2,   nil,
    57,    26,   nil,    41,    35,    32,    38,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -31,   -31,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -31,   -22,   -21,   -23,   -24,   -25,   -26,   -27,   -31,    -1,
    -5,   -31,   -31,   -31,   -31,    56,   -31,   -12,   -13,   -31,
   -29,   -22,   -31,   -31,   -31,   -31,   -31,   -31,   -31,   -15,
   -31,   -31,   -30,   -31,   -31,   -31,   -31,   -31,    -4,   -14,
   -29,   -16,   -17,   -18,   -19,   -20 ]

racc_goto_table = [
    11,    20,     3,    11,    27,    28,     2,     1,   nil,    32,
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   nil,   nil,    11,    32,    38,    51,
    52,    53,    54,    55,   nil,   nil,    20,   nil,    11 ]

racc_goto_check = [
    10,     5,     3,    10,     4,     4,     2,     1,   nil,     9,
   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,    10,     9,     3,     9,
     9,     9,     9,     9,   nil,   nil,     5,   nil,    10 ]

racc_goto_pointer = [
   nil,     7,     6,     2,   -17,    -2,   nil,   nil,   nil,   -14,
     0,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,
    31,    12,    13,    14,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 21, :_reduce_1,
  0, 22, :_reduce_2,
  1, 22, :_reduce_none,
  3, 24, :_reduce_4,
  2, 23, :_reduce_5,
  1, 23, :_reduce_6,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_11,
  3, 26, :_reduce_12,
  3, 27, :_reduce_13,
  5, 27, :_reduce_14,
  4, 28, :_reduce_15,
  5, 29, :_reduce_16,
  5, 29, :_reduce_17,
  5, 29, :_reduce_18,
  5, 29, :_reduce_19,
  5, 29, :_reduce_20,
  1, 29, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 32, :_reduce_25,
  1, 32, :_reduce_26,
  1, 30, :_reduce_27,
  3, 34, :_reduce_28,
  3, 33, :_reduce_29,
  4, 33, :_reduce_30 ]

racc_reduce_n = 31

racc_shift_n = 56

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "+" => 4,
  "-" => 5,
  :EOF => 6,
  :INDENT => 7,
  :DEDENT => 8,
  :NEWLINE => 9,
  :CONSTANT => 10,
  ":" => 11,
  :LPAREN => 12,
  :RPAREN => 13,
  " " => 14,
  "**" => 15,
  :FLOAT => 16,
  :INTEGER => 17,
  :IDENTIFIER => 18,
  "." => 19 }

racc_nt_base = 20

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "EOF",
  "INDENT",
  "DEDENT",
  "NEWLINE",
  "CONSTANT",
  "\":\"",
  "LPAREN",
  "RPAREN",
  "\" \"",
  "\"**\"",
  "FLOAT",
  "INTEGER",
  "IDENTIFIER",
  "\".\"",
  "$start",
  "target",
  "program",
  "statements",
  "block",
  "statement",
  "class_definition",
  "method_definition",
  "assignment",
  "expression",
  "identifier",
  "term",
  "literal",
  "method_call",
  "method_call_on_object" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'generator.y', 6)
  def _reduce_1(val, _values, result)
     result = [:program, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 8)
  def _reduce_2(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'generator.y', 11)
  def _reduce_4(val, _values, result)
     result = [:block, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 13)
  def _reduce_5(val, _values, result)
     result = [*val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 14)
  def _reduce_6(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'generator.y', 20)
  def _reduce_11(val, _values, result)
     result = [:noop, :noop] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 22)
  def _reduce_12(val, _values, result)
     result = [:class_definition, [:constant, val[0]], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 24)
  def _reduce_13(val, _values, result)
     result = [:method_definition, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 25)
  def _reduce_14(val, _values, result)
     result = [:method_definition, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 27)
  def _reduce_15(val, _values, result)
     result = [:assignment, val[0], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 29)
  def _reduce_16(val, _values, result)
     result = [:multiplication, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 30)
  def _reduce_17(val, _values, result)
     result = [:division, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 31)
  def _reduce_18(val, _values, result)
     result = [:subtraction, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 32)
  def _reduce_19(val, _values, result)
     result = [:addition, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 33)
  def _reduce_20(val, _values, result)
     result = [:exponentiation, val[0], val[4]] 
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'generator.y', 40)
  def _reduce_25(val, _values, result)
     result = [:float, val[0].to_f] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 41)
  def _reduce_26(val, _values, result)
     result = [:integer, val[0].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 43)
  def _reduce_27(val, _values, result)
     result = [:identifier, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 45)
  def _reduce_28(val, _values, result)
     result = [:call_on_object, val[0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 46)
  def _reduce_29(val, _values, result)
     result = [:call, val[0], [:args, []]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 47)
  def _reduce_30(val, _values, result)
     result = [:call, val[0], [:args, [val[2]]]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Generator
  end   # module Ast
