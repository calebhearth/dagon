#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


module Ast
  class Generator < Racc::Parser

module_eval(<<'...end generator.y/module_eval...', 'generator.y', 46)
  attr_accessor :table
  def initialize(tokens)
    @tokens = tokens
  end

  def parse
    @table = do_parse
    self
  end

  def next_token
    tokens.shift
  end

  private
  attr_accessor :tokens
...end generator.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     8,    39,    22,    51,    18,    19,     8,    23,    40,     8,
    41,    13,    14,    15,    13,    14,    15,    13,    14,    15,
    13,    14,    15,    24,    42,    38,    45,    13,    14,    15,
    13,    14,    15,    13,    14,    15,    27,    28,    29,    30,
    31,    13,    14,    15,    13,    14,    15,    13,    14,    15,
    13,    14,    15,    13,    14,    15,    44,    37,    36,    35,
    32,    21,    20,    16,    32,    53 ]

racc_action_check = [
     0,    28,    18,    43,     9,     9,     3,    18,    29,    32,
    30,     0,     0,     0,    43,    43,    43,     3,     3,     3,
    32,    32,    32,    19,    31,    27,    36,    40,    40,    40,
    19,    19,    19,    36,    36,    36,    20,    20,    20,    20,
    20,    42,    42,    42,    23,    23,    23,    39,    39,    39,
    41,    41,    41,    38,    38,    38,    35,    26,    25,    24,
    22,    16,    10,     1,    44,    51 ]

racc_action_pointer = [
    -3,    63,   nil,     3,   nil,   nil,   nil,   nil,   nil,    -1,
    54,   nil,   nil,   nil,   nil,   nil,    61,   nil,    -1,    16,
    27,   nil,    58,    30,    54,    52,    50,    17,    -7,     0,
     2,    16,     6,   nil,   nil,    53,    19,   nil,    39,    33,
    13,    36,    27,     0,    62,   nil,   nil,   nil,   nil,   nil,
   nil,    61,   nil,   nil ]

racc_action_default = [
    -2,   -29,    -1,    -3,    -7,    -8,    -9,   -10,   -11,   -21,
   -20,   -22,   -23,   -24,   -25,   -26,   -29,    -6,   -29,   -29,
   -29,    54,   -29,   -29,   -27,   -21,   -29,   -29,   -29,   -29,
   -29,   -29,   -29,   -12,   -14,   -29,   -29,   -28,   -29,   -29,
   -29,   -29,   -29,    -5,   -29,   -27,   -15,   -16,   -17,   -18,
   -19,   -11,   -13,    -4 ]

racc_goto_table = [
     9,    17,     3,     9,    26,     2,    33,     1,    34,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    46,    47,    48,    49,    50,    52,   nil,
   nil,   nil,     9,   nil,    43,   nil,   nil,   nil,   nil,   nil,
   nil,    17,   nil,     9 ]

racc_goto_check = [
     9,     5,     3,     9,     8,     2,     4,     1,     8,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,     8,     8,     8,     8,     8,     4,   nil,
   nil,   nil,     9,   nil,     3,   nil,   nil,   nil,   nil,   nil,
   nil,     5,   nil,     9 ]

racc_goto_pointer = [
   nil,     7,     5,     2,   -16,    -2,   nil,   nil,   -15,     0,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4,     5,     6,     7,    25,
    10,    11,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 18, :_reduce_1,
  0, 19, :_reduce_2,
  1, 19, :_reduce_none,
  4, 21, :_reduce_4,
  2, 21, :_reduce_5,
  2, 20, :_reduce_6,
  1, 20, :_reduce_7,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_11,
  4, 23, :_reduce_12,
  6, 23, :_reduce_13,
  4, 24, :_reduce_14,
  5, 25, :_reduce_15,
  5, 25, :_reduce_16,
  5, 25, :_reduce_17,
  5, 25, :_reduce_18,
  5, 25, :_reduce_19,
  1, 25, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 28, :_reduce_24,
  1, 28, :_reduce_25,
  1, 26, :_reduce_26,
  3, 29, :_reduce_27,
  4, 29, :_reduce_28 ]

racc_reduce_n = 29

racc_shift_n = 54

racc_token_table = {
  false => 0,
  :error => 1,
  :INDENT => 2,
  :NEWLINE => 3,
  :DEDENT => 4,
  ":" => 5,
  :LPAREN => 6,
  :RPAREN => 7,
  " " => 8,
  "*" => 9,
  "/" => 10,
  "-" => 11,
  "+" => 12,
  "**" => 13,
  :FLOAT => 14,
  :INTEGER => 15,
  :IDENTIFIER => 16 }

racc_nt_base = 17

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INDENT",
  "NEWLINE",
  "DEDENT",
  "\":\"",
  "LPAREN",
  "RPAREN",
  "\" \"",
  "\"*\"",
  "\"/\"",
  "\"-\"",
  "\"+\"",
  "\"**\"",
  "FLOAT",
  "INTEGER",
  "IDENTIFIER",
  "$start",
  "target",
  "program",
  "statements",
  "block",
  "statement",
  "method_definition",
  "assignment",
  "expression",
  "identifier",
  "term",
  "literal",
  "method_call" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'generator.y', 2)
  def _reduce_1(val, _values, result)
     result = [:program, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 4)
  def _reduce_2(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'generator.y', 7)
  def _reduce_4(val, _values, result)
     result = [:block, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 8)
  def _reduce_5(val, _values, result)
     result = [:block, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 10)
  def _reduce_6(val, _values, result)
     result = [*val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 11)
  def _reduce_7(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'generator.y', 16)
  def _reduce_11(val, _values, result)
     result = [:noop, :noop] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 18)
  def _reduce_12(val, _values, result)
     result = [:method_definition, val[0], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 19)
  def _reduce_13(val, _values, result)
     result = [:method_definition, val[0], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 21)
  def _reduce_14(val, _values, result)
     result = [:assignment, val[0], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 23)
  def _reduce_15(val, _values, result)
     result = [:addition, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 24)
  def _reduce_16(val, _values, result)
     result = [:division, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 25)
  def _reduce_17(val, _values, result)
     result = [:subtraction, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 26)
  def _reduce_18(val, _values, result)
     result = [:addition, val[0], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 27)
  def _reduce_19(val, _values, result)
     result = [:exponentiation, val[0], val[4]] 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'generator.y', 34)
  def _reduce_24(val, _values, result)
     result = [:float, val[0].to_f] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 35)
  def _reduce_25(val, _values, result)
     result = [:integer, val[0].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 37)
  def _reduce_26(val, _values, result)
     result = [:identifier, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 39)
  def _reduce_27(val, _values, result)
     result = [:call, val[0], [:args, []]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'generator.y', 40)
  def _reduce_28(val, _values, result)
     result = [:call, val[0], [:args, [val[2]]]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Generator
  end   # module Ast
